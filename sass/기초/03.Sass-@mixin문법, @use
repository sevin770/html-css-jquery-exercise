◆  @mixin 문법 - 함수문법
긴 코드를 짧은 단어로 축약할 때 쓴다.
@mixin작명(){
    이 안에 있는 코드를 '작명'으로 축약해주세요 뜻.
}
@include 작명() 
이라고 쓰면 위에mixin한 게 복붙된다.

--------------------------------------
ex)
@mixin 폰트스타일(){
    font-size: 30px;
    letter-spacing: -1px;
}

h2 {
    @include 폰트스타일() 
}
h3 {
    @include 폰트스타일() 
}
h4 {
    @include 폰트스타일() 
}
--------------------------------------

◆  @mixin문법의 $파라미터
긴 코드를 가변적으로 만들 때 쓴다.

@mixin 폰트스타일($구멍,$구멍2){
    font-size: $구멍;
    letter-spacing: $구멍2;
}

h2 {
    @include 폰트스타일(40px,1px) 
}
h3 {
    @include 폰트스타일(30px,2px)  
}
h4 {
    @include 폰트스타일(20px,3px) 
}

◆  보통 구멍은 오른쪽에 뚫지만 왼쪽에 뚫을 수도 있다. #{ $파라미터 }
@mixin 폰트스타일($구멍,$구멍2){
    font-size: $구멍;
    #{ $구멍2 }: 100px;
}
h2 {
    @inclued 폰트스타일(40px,width) 
}

◆  다른파일에 있는 내용 가져오고 싶을 땐
@use '파일경로'; 

@use './reset.scss'; 
여기에 있는 파일 그대로 복붙해주세요 라는 뜻.

- 컴파일할 필요없는 다른 파일에 종속되는 파일은 _를 붙인다. 
css파일로 바꿔주지 말아주세요 라는 뜻.
_reset.scss

use로 불러오면 그 파일에서 만들어놓은 변수도 쓸 수 있다. 
근데 앞에 파일 이름을 써줘야됨.
reset 파일에 $예쁜컬러 라는 변수를 만들었다면, 가져다 쓸떈
reset.$예쁜컬러
mixin도 똑같다. 
@include 파일명.mixin이름();

@use '_reset.scss';
reset.$변수명;  /* 다른 파일의 변수쓰는법 */
@include reset.mixin이름();  /* 다른 파일의 mixin쓰는법 */

function,if,for 등등도 있는데 자주 쓰지 않는다.